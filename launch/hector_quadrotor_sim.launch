<launch>

    <arg name="ns" default=""/>

    <!-- COMMANDER PARAMETERS -->
    <arg name="commander_dt" default="0.1"/>

    <!-- PLANNER PARAMETERS -->
    <arg name="continuity_upto_degree" default="2"/> <!-- used in commander as well -->
    <arg name="replanning_period" default="0.1"/>
    <arg name="maximum_derivative_magnitude_degrees" default="[1, 2]"/>
    <arg name="maximum_derivative_magnitude_magnitudes" default="[3, 6]"/>
    <arg name="workspace_min" default="[-50, -50, -1.5]"/>
    <arg name="workspace_max" default="[50, 50, 50]"/>
    <arg name="collision_shape_at_zero_min" default="[-0.4, -0.4, -0.15]"/>
    <arg name="collision_shape_at_zero_max" default="[0.4, 0.4, 0.15]"/>
    <arg name="soft_optimization_parameters/robot_to_robot_hyperplane_constraints_enabled" default="true"/>
    <arg name="soft_optimization_parameters/robot_to_obstacle_hyperplane_constraints_enabled" default="true"/>
    <arg name="soft_optimization_parameters/initial_point_constraints_enabled" default="true"/>
    <arg name="soft_optimization_parameters/continuity_constraints_enabled" default="true"/>
    <arg name="soft_optimization_parameters/robot_to_robot_hyperplane_constraints_value" default="10000"/>
    <arg name="soft_optimization_parameters/robot_to_obstacle_hyperplane_constraints_value" default="1000000"/>
    <arg name="soft_optimization_parameters/initial_point_constraints_value" default="100000"/>
    <arg name="soft_optimization_parameters/continuity_constraints_value" default="1000"/>
    <arg name="optimization_obstacle_check_distance" default="0.5"/>
    <arg name="optimizer" default="rlss-hard-soft"/>
    <arg name="piece_endpoint_cost_weights" default="[4, 8, 16, 32]"/>
    <arg name="integrated_squared_derivative_weight_degrees" default="[1, 2]"/>
    <arg name="integrated_squared_derivative_weight_weights" default="[1.0, 0.8]"/>
    <arg name="desired_time_horizon" default="5.0"/>
    <arg name="max_rescaling_count" default="6"/>
    <arg name="rescaling_multiplier" default="1.2"/>
    <arg name="search_step" default="0.01"/>
    <arg name="num_bezier_control_points" default="[7, 7, 7, 7]"/>
    <arg name="reference_frame" default="world"/>
    <arg name="robot_frame" default="$(arg ns)/base_link"/>
    <arg name="homing_position" default="[0, 0]"/>

    <!-- CONTROLLER PARAMETERS -->
<!--    <arg name="tf_prefix" default=""/>-->
<!--    <arg name="tf_prefix" default="$(optenv ROS_NAMESPACE)"/>-->
<!--    <arg name="world_frame" default="world"/>-->
<!--    <arg name="robot_frame" default="$(arg tf_prefix)/base_link"/>-->
    <arg name="kpp" default="5.5"/>
    <arg name="kpv" default="0"/>
    <arg name="kdp" default="2"/>
    <arg name="kdv" default="0"/>


    <rosparam param="continuity_upto_degree" subst_value="True">$(arg continuity_upto_degree)</rosparam>
    <rosparam param="replanning_period" subst_value="True">$(arg replanning_period)</rosparam>
    <rosparam param="maximum_derivative_magnitude_degrees" subst_value="True">$(arg maximum_derivative_magnitude_degrees)</rosparam>
    <rosparam param="maximum_derivative_magnitude_magnitudes" subst_value="True">$(arg maximum_derivative_magnitude_magnitudes)</rosparam>
    <rosparam param="workspace_min" subst_value="True">$(arg workspace_min)</rosparam>
    <rosparam param="workspace_max" subst_value="True">$(arg workspace_max)</rosparam>
    <rosparam param="collision_shape_at_zero_min" subst_value="True">$(arg collision_shape_at_zero_min)</rosparam>
    <rosparam param="collision_shape_at_zero_max" subst_value="True">$(arg collision_shape_at_zero_max)</rosparam>
    <rosparam param="soft_optimization_parameters/robot_to_robot_hyperplane_constraints_enabled" subst_value="True">$(arg soft_optimization_parameters/robot_to_robot_hyperplane_constraints_enabled)</rosparam>
    <rosparam param="soft_optimization_parameters/robot_to_obstacle_hyperplane_constraints_enabled" subst_value="True">$(arg soft_optimization_parameters/robot_to_obstacle_hyperplane_constraints_enabled)</rosparam>
    <rosparam param="soft_optimization_parameters/initial_point_constraints_enabled" subst_value="True">$(arg soft_optimization_parameters/initial_point_constraints_enabled)</rosparam>
    <rosparam param="soft_optimization_parameters/continuity_constraints_enabled" subst_value="True">$(arg soft_optimization_parameters/continuity_constraints_enabled)</rosparam>
    <rosparam param="soft_optimization_parameters/robot_to_robot_hyperplane_constraints_value" subst_value="True">$(arg soft_optimization_parameters/robot_to_robot_hyperplane_constraints_value)</rosparam>
    <rosparam param="soft_optimization_parameters/robot_to_obstacle_hyperplane_constraints_value" subst_value="True">$(arg soft_optimization_parameters/robot_to_obstacle_hyperplane_constraints_value)</rosparam>
    <rosparam param="soft_optimization_parameters/initial_point_constraints_value" subst_value="True">$(arg soft_optimization_parameters/initial_point_constraints_value)</rosparam>
    <rosparam param="soft_optimization_parameters/continuity_constraints_value" subst_value="True">$(arg soft_optimization_parameters/continuity_constraints_value)</rosparam>
    <rosparam param="optimization_obstacle_check_distance" subst_value="True">$(arg optimization_obstacle_check_distance)</rosparam>
    <rosparam param="optimizer" subst_value="True">$(arg optimizer)</rosparam>
    <rosparam param="piece_endpoint_cost_weights" subst_value="True">$(arg piece_endpoint_cost_weights)</rosparam>
    <rosparam param="integrated_squared_derivative_weight_degrees" subst_value="True">$(arg integrated_squared_derivative_weight_degrees)</rosparam>
    <rosparam param="integrated_squared_derivative_weight_weights" subst_value="True">$(arg integrated_squared_derivative_weight_weights)</rosparam>
    <rosparam param="desired_time_horizon" subst_value="True">$(arg desired_time_horizon)</rosparam>
    <rosparam param="max_rescaling_count" subst_value="True">$(arg max_rescaling_count)</rosparam>
    <rosparam param="rescaling_multiplier" subst_value="True">$(arg rescaling_multiplier)</rosparam>
    <rosparam param="search_step" subst_value="True">$(arg search_step)</rosparam>
    <rosparam param="num_bezier_control_points" subst_value="True">$(arg num_bezier_control_points)</rosparam>
    <rosparam param="commander_dt" subst_value="True">$(arg commander_dt)</rosparam>
    <rosparam param="reference_frame" subst_value="True">$(arg reference_frame)</rosparam>
    <rosparam param="robot_frame" subst_value="True">$(arg robot_frame)</rosparam>
    <rosparam param="homing_position" subst_value="True">$(arg homing_position)</rosparam>


    <param name="with_controller" value="true"/>
    <node pkg="rlss_ros" name="nav_server" type="nav_action_server_3d" required="true" output="screen"/>
    <node pkg="rlss_ros" name="takeoff_server" type="takeoff_action_server_3d" required="true" output="screen"/>
    <node pkg="rlss_ros" name="land_server" type="land_action_server_3d" required="true" output="screen"/>
    <node pkg="rlss_ros" name="follow_trajectory_server" type="follow_trajectory_action_server_3d" required="true" output="screen"/>
    <node pkg="rlss_ros" name="replanner" type="replanner_3d" required="true" output="screen"/>
    <node pkg="rlss_ros" name="commander" type="commander_3d" required="true" output="screen"/>
    <node pkg="rlss_ros" name="localizer" type="tf_localizer_3d" required="true" output="screen"/>
    <node pkg="rlss_ros" name="controller" type="hector_quadrotor_controller" required="true" output="screen">
        <param name="kpp" value="$(arg kpp)"/>
        <param name="kpv" value="$(arg kpv)"/>
        <param name="kdp" value="$(arg kdp)"/>
        <param name="kdv" value="$(arg kdv)"/>
    </node>

    <arg name="x_pos" default="0.0"/>
    <arg name="y_pos" default="0.0"/>
    <arg name="z_pos" default="0.0"/>
    <include file="$(find rlss_ros)/launch/hector_quadrotor_spawn.launch">
        <arg name="ns" value="$(arg ns)"/>
        <arg name="x" value="$(arg x_pos)"/>
        <arg name="y" value="$(arg y_pos)"/>
        <arg name="z" value="$(arg z_pos)"/>
    </include>

    <node pkg="rosservice" type="rosservice" name="enable_motors" args='call --wait enable_motors "enable: true"'>
    </node>

</launch>